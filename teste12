<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Portfólio</title>
    <style>
        /* Estilos básicos */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f1f1f1;
            color: #333;
        }

        header {
            background-color: #D4A5A5;
            padding: 20px;
            text-align: center;
        }

        header h1 {
            margin: 0;
            font-size: 2.5em;
            color: white;
        }

        .chat-container {
            position: fixed;
            bottom: 20px;
            right: 20px;
            width: 300px;
            height: 400px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            display: flex;
            flex-direction: column;
        }

        .chat-header {
            background-color: #D4A5A5;
            padding: 10px;
            color: white;
            text-align: center;
            font-size: 1.2em;
            border-radius: 10px 10px 0 0;
        }

        .chat-box {
            flex-grow: 1;
            overflow-y: auto;
            padding: 10px;
            background-color: #f9f9f9;
        }

        .chat-input {
            padding: 10px;
            border-top: 1px solid #ddd;
            display: flex;
        }

        .chat-input input {
            flex-grow: 1;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 1em;
        }

        .chat-input button {
            background-color: #D4A5A5;
            color: white;
            border: none;
            padding: 10px;
            margin-left: 5px;
            border-radius: 5px;
            font-size: 1em;
        }

        .chat-input button:hover {
            background-color: #B47D7D;
        }

        .message {
            margin-bottom: 10px;
        }

        .message.client {
            text-align: right;
            color: #333;
        }

        .message.support {
            text-align: left;
            color: #D4A5A5;
        }
    </style>
    <!-- Adicione o Firebase SDK -->
    <script src="https://www.gstatic.com/firebasejs/9.1.3/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.1.3/firebase-firestore.js"></script>
</head>
<body>

    <header>
        <h1>Seu Nome ou Nome do Portfólio</h1>
    </header>

    <div class="chat-container" id="chatContainer">
        <div class="chat-header">
            Chat ao Vivo
        </div>
        <div class="chat-box" id="chatBox"></div>
        <div class="chat-input">
            <input type="text" id="messageInput" placeholder="Digite sua mensagem..." />
            <button id="sendMessageButton">Enviar</button>
        </div>
    </div>

    <script>
        // Configuração do Firebase
        const firebaseConfig = {
            apiKey: "SUA_API_KEY",
            authDomain: "SEU_AUTH_DOMAIN",
            projectId: "SEU_PROJECT_ID",
            storageBucket: "SEU_STORAGE_BUCKET",
            messagingSenderId: "SEU_MESSAGING_SENDER_ID",
            appId: "SEU_APP_ID",
            measurementId: "SEU_MEASUREMENT_ID"
        };

        // Inicializando o Firebase
        const app = firebase.initializeApp(firebaseConfig);
        const db = firebase.firestore(app);

        // Gerar um ID único para o cliente (por exemplo, baseado em um timestamp ou número aleatório)
        const chatId = 'chat_' + Date.now(); // ID único baseado no timestamp

        // Função para enviar a mensagem
        document.getElementById('sendMessageButton').addEventListener('click', async () => {
            const message = document.getElementById('messageInput').value;
            if (message.trim()) {
                await db.collection('chats').doc(chatId).collection('messages').add({
                    sender: 'client',
                    message: message,
                    timestamp: firebase.firestore.FieldValue.serverTimestamp()
                });
                document.getElementById('messageInput').value = ''; // Limpa o campo de mensagem
            }
        });

        // Função para exibir as mensagens
        db.collection('chats').doc(chatId).collection('messages').orderBy('timestamp')
            .onSnapshot(snapshot => {
                const chatBox = document.getElementById('chatBox');
                chatBox.innerHTML = ''; // Limpa as mensagens antigas
                snapshot.forEach(doc => {
                    const data = doc.data();
                    const div = document.createElement('div');
                    div.classList.add('message', data.sender);
                    div.textContent = data.message;
                    chatBox.appendChild(div);
                    chatBox.scrollTop = chatBox.scrollHeight; // Rola para a última mensagem
                });
            });
    </script>

</body>
</html>
